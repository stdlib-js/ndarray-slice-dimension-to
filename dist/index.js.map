{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPlainObject = require( '@stdlib/assert-is-plain-object' );\nvar isBoolean = require( '@stdlib/assert-is-boolean' ).isPrimitive;\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar isndarrayLike = require( '@stdlib/assert-is-ndarray-like' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar base = require( '@stdlib/ndarray-base-slice-dimension-to' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a read-only truncated view of an input ndarray along a specified dimension.\n*\n* @param {ndarray} x - input array\n* @param {integer} dim - index of dimension to slice\n* @param {integer} stop - ending index (exclusive)\n* @param {Options} [options] - options\n* @param {boolean} [options.strict] - boolean indicating whether to enforce strict bounds checking\n* @throws {TypeError} first argument must be an ndarray having one or more dimensions\n* @throws {TypeError} second argument must be an integer\n* @throws {TypeError} third argument must be an integer\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} dimension index exceeds the number of dimensions\n* @throws {RangeError} slice exceeds array bounds\n* @returns {ndarray} ndarray view\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var y = sliceDimensionTo( x, 0, 2 );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ] ]\n*/\nfunction sliceDimensionTo( x, dim, stop ) {\n\tvar options;\n\tvar opts;\n\n\topts = {\n\t\t'strict': true\n\t};\n\tif ( !isndarrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ndarray. Value: `%s`.', x ) );\n\t}\n\tif ( !isInteger( dim ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an integer. Value: `%s`.', dim ) );\n\t}\n\tif ( !isInteger( stop ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be an integer. Value: `%s`.', stop ) );\n\t}\n\tif ( arguments.length > 3 ) {\n\t\toptions = arguments[ 3 ];\n\t\tif ( !isPlainObject( options ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'strict' ) ) {\n\t\t\tif ( !isBoolean( options.strict ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a boolean. Option: `%s`.', 'strict', options.strict ) );\n\t\t\t}\n\t\t\topts.strict = options.strict;\n\t\t}\n\t}\n\treturn base( x, dim, stop, opts.strict, false );\n}\n\n\n// EXPORTS //\n\nmodule.exports = sliceDimensionTo;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a read-only truncated view of an input ndarray along a specified dimension.\n*\n* @module @stdlib/ndarray-slice-dimension-to\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-ctor' );\n* var ndarray2array = require( '@stdlib/ndarray-to-array' );\n* var sliceDimensionTo = require( '@stdlib/ndarray-slice-dimension-to' );\n*\n* var buffer = [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0 ];\n* var shape = [ 3, 2 ];\n* var strides = [ 2, 1 ];\n* var offset = 0;\n*\n* var x = ndarray( 'generic', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* var sh = x.shape;\n* // returns [ 3, 2 ]\n*\n* var arr = ndarray2array( x );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ], [ 5.0, 6.0 ] ]\n*\n* var y = sliceDimensionTo( x, 0, 2 );\n* // returns <ndarray>\n*\n* sh = y.shape;\n* // returns [ 2, 2 ]\n*\n* arr = ndarray2array( y );\n* // returns [ [ 1.0, 2.0 ], [ 3.0, 4.0 ] ]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAY,QAAS,2BAA4B,EAAE,YACnDC,EAAgB,QAAS,gCAAiC,EAC1DC,EAAa,QAAS,iCAAkC,EACxDC,EAAO,QAAS,yCAA0C,EAC1DC,EAAS,QAAS,uBAAwB,EAiD9C,SAASC,EAAkBC,EAAGC,EAAKC,EAAO,CACzC,IAAIC,EACAC,EAKJ,GAHAA,EAAO,CACN,OAAU,EACX,EACK,CAACT,EAAeK,CAAE,EACtB,MAAM,IAAI,UAAWF,EAAQ,oEAAqEE,CAAE,CAAE,EAEvG,GAAK,CAACN,EAAWO,CAAI,EACpB,MAAM,IAAI,UAAWH,EAAQ,qEAAsEG,CAAI,CAAE,EAE1G,GAAK,CAACP,EAAWQ,CAAK,EACrB,MAAM,IAAI,UAAWJ,EAAQ,oEAAqEI,CAAK,CAAE,EAE1G,GAAK,UAAU,OAAS,EAAI,CAE3B,GADAC,EAAU,UAAW,CAAE,EAClB,CAACX,EAAeW,CAAQ,EAC5B,MAAM,IAAI,UAAWL,EAAQ,qEAAsEK,CAAQ,CAAE,EAE9G,GAAKP,EAAYO,EAAS,QAAS,EAAI,CACtC,GAAK,CAACV,EAAWU,EAAQ,MAAO,EAC/B,MAAM,IAAI,UAAWL,EAAQ,+DAAgE,SAAUK,EAAQ,MAAO,CAAE,EAEzHC,EAAK,OAASD,EAAQ,MACvB,CACD,CACA,OAAON,EAAMG,EAAGC,EAAKC,EAAME,EAAK,OAAQ,EAAM,CAC/C,CAKAb,EAAO,QAAUQ,ICvDjB,IAAIM,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isPlainObject", "isBoolean", "isInteger", "isndarrayLike", "hasOwnProp", "base", "format", "sliceDimensionTo", "x", "dim", "stop", "options", "opts", "main"]
}
